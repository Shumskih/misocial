/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}@font-face{font-family:mavenpro-regular;font-weight:400;font-style:normal;src:url(../fonts/MavenProRegular/MavenProRegular.eot);src:url(../fonts/MavenProRegular/MavenProRegular.eot?#iefix) format("embedded-opentype"),url(../fonts/MavenProRegular/MavenProRegular.woff) format("woff"),url(../fonts/MavenProRegular/MavenProRegular.ttf) format("truetype")}@font-face{font-family:mavenpro-medium;font-weight:500;font-style:normal;src:url(../fonts/MavenProMedium/MavenProMedium.eot);src:url(../fonts/MavenProMedium/MavenProMedium.eot?#iefix) format("embedded-opentype"),url(../fonts/MavenProMedium/MavenProMedium.woff) format("woff"),url(../fonts/MavenProMedium/MavenProMedium.ttf) format("truetype")}@font-face{font-family:mavenpro-bold;font-weight:700;font-style:normal;src:url(../fonts/MavenProBold/MavenProBold.eot);src:url(../fonts/MavenProBold/MavenProBold.eot?#iefix) format("embedded-opentype"),url(../fonts/MavenProBold/MavenProBold.woff) format("woff"),url(../fonts/MavenProBold/MavenProBold.ttf) format("truetype")}*,:after,:before{box-sizing:border-box}body{font-family:mavenpro-regular,sans-serif;margin:0}html{font-size:10px}.main{color:#fff;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;height:100vh;min-height:600px;background:url(../img/main-bg.jpg) no-repeat 50%;background-size:cover}.main-overlay{position:absolute;left:0;top:0;width:100%;height:100%;opacity:.8;z-index:0;background-image:linear-gradient(150deg,#88d3ce,#6e45e2)}.main .header{display:-ms-flexbox;display:flex;height:10vh;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;width:90%;position:relative;z-index:1}.main .header .menu{width:70%}.main .header .menu ul{display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around;list-style:none}.main .header .menu-link{font-size:1.6rem;color:#fff;text-decoration:none}.main .header .menu-link.get-started-btn{margin-left:100px;border:1px solid #fff;padding:10px 20px;border-radius:100px;text-transform:uppercase}.main-text{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;position:relative;z-index:1;text-align:center}.main-text span{text-transform:uppercase;font-size:1.4rem;display:inline-block}.main-text span:after{margin-left:10px}.main-text span:after,.main-text span:before{content:"";width:20px;height:1px;background-color:#fff;display:inline-block;vertical-align:middle}.main-text span:before{margin-right:10px}.main-text h1{font-family:mavenpro-regular,sans-serif;margin:.5rem;font-size:8.6rem}.main-text p{font-size:1.8rem;max-width:45rem;line-height:28px}.main-arrow{position:relative;z-index:1;height:20vh;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}.main-arrow .arrow-down{text-align:center;line-height:60px;border-radius:50%;width:50px;height:50px;background-color:#fff;box-shadow:0 0 18.69px 2.31px rgba(204,204,223,.5)}.table{background-color:#f9fafc;padding:12rem}.table-header{text-align:center}.table-header span{text-transform:uppercase;font-family:mavenpro-bold;font-size:1.4rem;color:#9fa4af}.table-header span:after{margin-left:10px}.table-header span:after,.table-header span:before{content:"";width:20px;height:1px;background-color:#6e45e2;display:inline-block;vertical-align:middle}.table-header span:before{margin-right:10px}.table-header h2{color:#4f4f6f;font-size:6rem;margin:0}.table-header p{color:#9fa4af;font-size:1.8rem;display:inline-block;width:37rem;line-hight:28px}.table .price-tags{-ms-flex-pack:distribute;justify-content:space-around;margin-top:10rem}.table .price-tag,.table .price-tags{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.table .price-tag{background-color:#fff;border-radius:3rem;padding:2rem;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;text-align:center;width:44rem;border:.1rem solid #d7dbe8;transition:.5s}.table .price-tag:hover{cursor:pointer;box-shadow:0 0 81.88px 10.12px rgba(204,204,223,.71);transition:.2s}.table .price-tag span{color:#9fa4af;font-family:mavenpro-bold;font-size:1.4rem;line-height:3.2rem;text-transform:uppercase;margin-top:5.3rem}.table .price-tag h4{color:#4f4f6f;margin:1rem;font-family:mavenpro-medium;font-size:3.5rem}.table .price-tag h4 sub{font-size:1.4rem}.table .price-tag h4 sup{font-size:1.4rem;vertical-align:super;margin-right:.5rem}.table .price-tag img{margin-top:5.9rem}.table .price-tag p{color:#9fa4af;font-size:1.6rem;line-height:28px;width:30rem}.table .price-btn{background-color:#fff;border:1px solid #9fa4af;color:#9fa4af;text-transform:uppercase;font-size:1.2rem;font-family:mavenpro-bold;padding:2.1rem 5.4rem;border-radius:10rem;margin-top:4.9rem;margin-bottom:6rem;transition:.2s}.table .price-btn:hover{transition:.2s;color:#fff;background-color:#6e45e2}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
